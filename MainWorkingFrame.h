#ifndef __MainWorkingFrame__
#define __MainWorkingFrame__

/**
@file
Subclass of MainFrameBase, which is generated by wxFormBuilder.
*/

#include "gui.h"

//// end generated include

#include "CImg.h"
#include <wx/filedlg.h>
#include <wx/dcbuffer.h>
#include <wx/msgdlg.h>
#include <wx/wfstream.h>
#include <wx/log.h> 
#include <algorithm>

/** Implementing MainFrameBase */
class MainWorkingFrame : public MainFrameBase
{
	protected:
		// Handlers for MainFrameBase events.
		void FrameOnPaint( wxPaintEvent& event );
		void FrameOnSize( wxSizeEvent& event );
		void FrameOnUpdateUI( wxUpdateUIEvent& event );
		void BtnImportImageClick( wxCommandEvent& event );
		void setDefaultMixer();
		void OnScrollRed( wxScrollEvent& event );
		void OnScrollGreen( wxScrollEvent& event );
		void OnScrollBlue( wxScrollEvent& event );
		void BtnBichromyClick( wxCommandEvent& event );
		void BtnLoadParametersClick( wxCommandEvent& event );
		void BtnSaveParametersClick( wxCommandEvent& event );
		void OnScrollMixer( wxScrollEvent& event );
		void ToggleKeepingHueClick( wxCommandEvent& event );
		void ColorChanged( wxColourPickerEvent& event );
		void BtnSaveImageClick( wxCommandEvent& event );
	public:
		/** Constructor */
		MainWorkingFrame( wxWindow* parent );
	//// end generated class members
		void bichromyGradientChanged(wxColourPickerEvent& event) {
			wxCommandEvent evt(wxEVT_COMMAND_BUTTON_CLICKED, m_button_bichromy->GetId());    GetEventHandler()->ProcessEvent(evt); BtnBichromyClick(evt);
		}
		void btnRestoreImageClick(wxCommandEvent& event) { Img_Cpy = Img_GrayScale = Img_Org.Copy(); setDefaultMixer(); Repaint(); } //Jezemy chcemy aby restore, przywracal kolorowy obrazek to nalezy zakomentowac setDefaultMixer()
		cimg_library::CImg<unsigned char> wxImageToCImg(const wxImage& image);
		wxImage CImgTowxImage(const cimg_library::CImg<unsigned char>& image);
	
	private:
		void Repaint();
		void MixChannels(int, int, int);
		wxImage Img_Org;
		wxImage Img_Cpy;
		wxImage Img_GrayScale;

};

#endif // __MainWorkingFrame__
